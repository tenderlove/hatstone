rb_define_const(klass, "ARCH_ARM", INT2NUM(CS_ARCH_ARM));
rb_define_const(klass, "ARCH_ARM64", INT2NUM(CS_ARCH_ARM64));
rb_define_const(klass, "ARCH_MIPS", INT2NUM(CS_ARCH_MIPS));
rb_define_const(klass, "ARCH_X86", INT2NUM(CS_ARCH_X86));
rb_define_const(klass, "ARCH_PPC", INT2NUM(CS_ARCH_PPC));
rb_define_const(klass, "ARCH_SPARC", INT2NUM(CS_ARCH_SPARC));
rb_define_const(klass, "ARCH_SYSZ", INT2NUM(CS_ARCH_SYSZ));
rb_define_const(klass, "ARCH_XCORE", INT2NUM(CS_ARCH_XCORE));
rb_define_const(klass, "ARCH_M68K", INT2NUM(CS_ARCH_M68K));
rb_define_const(klass, "ARCH_TMS320C64X", INT2NUM(CS_ARCH_TMS320C64X));
rb_define_const(klass, "ARCH_M680X", INT2NUM(CS_ARCH_M680X));
rb_define_const(klass, "ARCH_EVM", INT2NUM(CS_ARCH_EVM));
rb_define_const(klass, "ARCH_MAX", INT2NUM(CS_ARCH_MAX));
rb_define_const(klass, "ARCH_ALL", INT2NUM(CS_ARCH_ALL));
rb_define_const(klass, "MODE_LITTLE_ENDIAN", INT2NUM(CS_MODE_LITTLE_ENDIAN));
rb_define_const(klass, "MODE_ARM", INT2NUM(CS_MODE_ARM));
rb_define_const(klass, "MODE_16", INT2NUM(CS_MODE_16));
rb_define_const(klass, "MODE_32", INT2NUM(CS_MODE_32));
rb_define_const(klass, "MODE_64", INT2NUM(CS_MODE_64));
rb_define_const(klass, "MODE_THUMB", INT2NUM(CS_MODE_THUMB));
rb_define_const(klass, "MODE_MCLASS", INT2NUM(CS_MODE_MCLASS));
rb_define_const(klass, "MODE_V8", INT2NUM(CS_MODE_V8));
rb_define_const(klass, "MODE_MICRO", INT2NUM(CS_MODE_MICRO));
rb_define_const(klass, "MODE_MIPS3", INT2NUM(CS_MODE_MIPS3));
rb_define_const(klass, "MODE_MIPS32R6", INT2NUM(CS_MODE_MIPS32R6));
rb_define_const(klass, "MODE_MIPS2", INT2NUM(CS_MODE_MIPS2));
rb_define_const(klass, "MODE_V9", INT2NUM(CS_MODE_V9));
rb_define_const(klass, "MODE_QPX", INT2NUM(CS_MODE_QPX));
rb_define_const(klass, "MODE_M68K_000", INT2NUM(CS_MODE_M68K_000));
rb_define_const(klass, "MODE_M68K_010", INT2NUM(CS_MODE_M68K_010));
rb_define_const(klass, "MODE_M68K_020", INT2NUM(CS_MODE_M68K_020));
rb_define_const(klass, "MODE_M68K_030", INT2NUM(CS_MODE_M68K_030));
rb_define_const(klass, "MODE_M68K_040", INT2NUM(CS_MODE_M68K_040));
rb_define_const(klass, "MODE_M68K_060", INT2NUM(CS_MODE_M68K_060));
rb_define_const(klass, "MODE_BIG_ENDIAN", INT2NUM(CS_MODE_BIG_ENDIAN));
rb_define_const(klass, "MODE_MIPS32", INT2NUM(CS_MODE_MIPS32));
rb_define_const(klass, "MODE_MIPS64", INT2NUM(CS_MODE_MIPS64));
rb_define_const(klass, "MODE_M680X_6301", INT2NUM(CS_MODE_M680X_6301));
rb_define_const(klass, "MODE_M680X_6309", INT2NUM(CS_MODE_M680X_6309));
rb_define_const(klass, "MODE_M680X_6800", INT2NUM(CS_MODE_M680X_6800));
rb_define_const(klass, "MODE_M680X_6801", INT2NUM(CS_MODE_M680X_6801));
rb_define_const(klass, "MODE_M680X_6805", INT2NUM(CS_MODE_M680X_6805));
rb_define_const(klass, "MODE_M680X_6808", INT2NUM(CS_MODE_M680X_6808));
rb_define_const(klass, "MODE_M680X_6809", INT2NUM(CS_MODE_M680X_6809));
rb_define_const(klass, "MODE_M680X_6811", INT2NUM(CS_MODE_M680X_6811));
rb_define_const(klass, "MODE_M680X_CPU12", INT2NUM(CS_MODE_M680X_CPU12));
rb_define_const(klass, "MODE_M680X_HCS08", INT2NUM(CS_MODE_M680X_HCS08));
rb_define_const(klass, "OPT_INVALID", INT2NUM(CS_OPT_INVALID));
rb_define_const(klass, "OPT_SYNTAX", INT2NUM(CS_OPT_SYNTAX));
rb_define_const(klass, "OPT_DETAIL", INT2NUM(CS_OPT_DETAIL));
rb_define_const(klass, "OPT_MODE", INT2NUM(CS_OPT_MODE));
rb_define_const(klass, "OPT_MEM", INT2NUM(CS_OPT_MEM));
rb_define_const(klass, "OPT_SKIPDATA", INT2NUM(CS_OPT_SKIPDATA));
rb_define_const(klass, "OPT_SKIPDATA_SETUP", INT2NUM(CS_OPT_SKIPDATA_SETUP));
rb_define_const(klass, "OPT_MNEMONIC", INT2NUM(CS_OPT_MNEMONIC));
rb_define_const(klass, "OPT_UNSIGNED", INT2NUM(CS_OPT_UNSIGNED));
rb_define_const(klass, "OPT_OFF", INT2NUM(CS_OPT_OFF));
rb_define_const(klass, "OPT_ON", INT2NUM(CS_OPT_ON));
rb_define_const(klass, "OPT_SYNTAX_DEFAULT", INT2NUM(CS_OPT_SYNTAX_DEFAULT));
rb_define_const(klass, "OPT_SYNTAX_INTEL", INT2NUM(CS_OPT_SYNTAX_INTEL));
rb_define_const(klass, "OPT_SYNTAX_ATT", INT2NUM(CS_OPT_SYNTAX_ATT));
rb_define_const(klass, "OPT_SYNTAX_NOREGNAME", INT2NUM(CS_OPT_SYNTAX_NOREGNAME));
rb_define_const(klass, "OPT_SYNTAX_MASM", INT2NUM(CS_OPT_SYNTAX_MASM));
rb_define_const(klass, "OP_INVALID", INT2NUM(CS_OP_INVALID));
rb_define_const(klass, "OP_REG", INT2NUM(CS_OP_REG));
rb_define_const(klass, "OP_IMM", INT2NUM(CS_OP_IMM));
rb_define_const(klass, "OP_MEM", INT2NUM(CS_OP_MEM));
rb_define_const(klass, "OP_FP", INT2NUM(CS_OP_FP));
rb_define_const(klass, "AC_INVALID", INT2NUM(CS_AC_INVALID));
rb_define_const(klass, "AC_READ", INT2NUM(CS_AC_READ));
rb_define_const(klass, "AC_WRITE", INT2NUM(CS_AC_WRITE));
rb_define_const(klass, "GRP_INVALID", INT2NUM(CS_GRP_INVALID));
rb_define_const(klass, "GRP_JUMP", INT2NUM(CS_GRP_JUMP));
rb_define_const(klass, "GRP_CALL", INT2NUM(CS_GRP_CALL));
rb_define_const(klass, "GRP_RET", INT2NUM(CS_GRP_RET));
rb_define_const(klass, "GRP_INT", INT2NUM(CS_GRP_INT));
rb_define_const(klass, "GRP_IRET", INT2NUM(CS_GRP_IRET));
rb_define_const(klass, "GRP_PRIVILEGE", INT2NUM(CS_GRP_PRIVILEGE));
rb_define_const(klass, "GRP_BRANCH_RELATIVE", INT2NUM(CS_GRP_BRANCH_RELATIVE));
rb_define_const(klass, "ERR_OK", INT2NUM(CS_ERR_OK));
rb_define_const(klass, "ERR_MEM", INT2NUM(CS_ERR_MEM));
rb_define_const(klass, "ERR_ARCH", INT2NUM(CS_ERR_ARCH));
rb_define_const(klass, "ERR_HANDLE", INT2NUM(CS_ERR_HANDLE));
rb_define_const(klass, "ERR_CSH", INT2NUM(CS_ERR_CSH));
rb_define_const(klass, "ERR_MODE", INT2NUM(CS_ERR_MODE));
rb_define_const(klass, "ERR_OPTION", INT2NUM(CS_ERR_OPTION));
rb_define_const(klass, "ERR_DETAIL", INT2NUM(CS_ERR_DETAIL));
rb_define_const(klass, "ERR_MEMSETUP", INT2NUM(CS_ERR_MEMSETUP));
rb_define_const(klass, "ERR_VERSION", INT2NUM(CS_ERR_VERSION));
rb_define_const(klass, "ERR_DIET", INT2NUM(CS_ERR_DIET));
rb_define_const(klass, "ERR_SKIPDATA", INT2NUM(CS_ERR_SKIPDATA));
rb_define_const(klass, "ERR_X86_ATT", INT2NUM(CS_ERR_X86_ATT));
rb_define_const(klass, "ERR_X86_INTEL", INT2NUM(CS_ERR_X86_INTEL));
rb_define_const(klass, "ERR_X86_MASM", INT2NUM(CS_ERR_X86_MASM));

#ifdef CS_API_MAJOR
#if CS_API_MAJOR >= 5
rb_define_const(klass, "ARCH_RISCV", INT2NUM(CS_ARCH_RISCV));
rb_define_const(klass, "MODE_RISCV32", INT2NUM(CS_MODE_RISCV32));
rb_define_const(klass, "MODE_RISCV64", INT2NUM(CS_MODE_RISCV64));
rb_define_const(klass, "MODE_RISCVC", INT2NUM(CS_MODE_RISCVC));
#endif
#endif

